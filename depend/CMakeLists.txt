cmake_minimum_required(VERSION 3.10.2)


set(GLEW_USE_STATIC_LIBS TRUE)
if(EXISTS "C:/Program Files (x86)/GLEW/")
    if(EXISTS "C:/Program Files (x86)/GLEW/lib/libglew32.a")
        set(GLEW_LIBS_FOUND TRUE)
        list(APPEND GLEW_LIBS "C:/Program Files (x86)/GLEW/lib/libglew32.a")
    endif()
    if(EXISTS "C:/Program Files (x86)/GLEW/include")
        set(GLEW_INC_DIR_FOUND TRUE)
        list(APPEND GLEW_INC_DIRS "C:/Program Files (x86)/GLEW/include")
    endif()
endif()
if((NOT GLEW_LIBS_FOUND) OR (NOT GLEW_INC_DIR_FOUND))
    find_package(GLEW QUIET)
    if(GLEW_FOUND)
        list(APPEND GLEW_LIBS ${GLEW_LIBRARIES})
        list(APPEND GLEW_INC_DIRS ${GLEW_INCLUDE_DIRS})
        set(GLEW_LIBS_FOUND TRUE)
        set(GLEW_INC_DIR_FOUND TRUE)
    else()
        if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/glew-cmake)
            add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/glew-cmake)
            list(APPEND GLEW_INC_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/glew-cmake/include)
            set(GLEW_LIBS_FOUND TRUE)
            set(GLEW_INC_DIR_FOUND TRUE)
        else()
            message(WARNING "GLEW Could Not Be Found With Current Methods, Please Either Install GLEW Or   Clone GLEW Into The depend Directory!")
        endif()
    endif()
endif()


if(EXISTS "C:/Program Files (x86)/GLFW/")
    if(EXISTS "C:/Program Files (x86)/GLFW/lib/libglfw3.a")
        set(GLFW_LIBS_FOUND TRUE)
        list(APPEND GLFW_LIBS "C:/Program Files (x86)/GLFW/lib/libglfw3.a")
    endif()
    if(EXISTS "C:/Program Files (x86)/GLFW/include")
        set(GLFW_INC_DIR_FOUND TRUE)
        list(APPEND GLFW_INC_DIRS "C:/Program Files (x86)/GLFW/include")
    endif()
endif()
if((NOT GLFW_LIBS_FOUND) OR (NOT GLFW_INC_DIR_FOUND))
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/glfw)
        add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/glfw)
        list(APPEND GLEW_INC_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/glfw/include)
        set(GLFW_LIBS_FOUND TRUE)
        set(GLFW_INC_DIR_FOUND TRUE)
    else()
        message(WARNING "GLFW Could Not Be Found With Current Methods, Please Either Install GLFW Or Clone GLFW Into The depend Directory!")
    endif()
endif()


if(EXISTS "C:/Program Files (x86)/SOIL/")
    if(EXISTS "C:/Program Files (x86)/SOIL/lib/libSOIL.a")
        set(SOIL_LIBS_FOUND TRUE)
        list(APPEND SOIL_LIBS "C:/Program Files (x86)/SOIL/lib/libSOIL.a")
    endif()
    if(EXISTS "C:/Program Files (x86)/SOIL/include")
        set(SOIL_INC_DIR_FOUND TRUE)
        list(APPEND SOIL_INC_DIRS "C:/Program Files (x86)/SOIL/include")
    endif()
endif()
if((NOT SOIL_LIBS_FOUND) OR (NOT SOIL_INC_DIR_FOUND))
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/soil)
        add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/soil)
        list(APPEND SOIL_INC_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/soil/inc)
        set(SOIL_LIBS_FOUND TRUE)
        set(SOIL_INC_DIR_FOUND TRUE)
    else()
        message(WARNING "SOIL Could Not Be Found With Current Methods, Please Either Install SOIL Or Clone SOIL Into The depend Directory!")
    endif()
endif()


if(EXISTS "C:/Program Files (x86)/SoLoud_MA/")
    if(EXISTS "C:/Program Files (x86)/SoLoud_MA/lib/libSoLoud_MA.a")
        set(SOLOUD_MA_LIBS_FOUND TRUE)
        list(APPEND SOLOUD_MA_LIBS "C:/Program Files (x86)/SoLoud_MA/lib/libSoLoud_MA.a")
    endif()
    if(EXISTS "C:/Program Files (x86)/SoLoud_MA/include")
        set(SOLOUD_MA_INC_DIR_FOUND TRUE)
        list(APPEND SOLOUD_MA_INC_DIRS "C:/Program Files (x86)/SoLoud_MA/include")
    endif()
endif()
if((NOT SOLOUD_MA_LIBS_FOUND) OR (NOT SOLOUD_MA_INC_DIR_FOUND))
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/SoLoud_MA)
        add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/SoLoud_MA)
        list(APPEND SOLOUD_MA_INC_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/SoLoud_MA/include)
        set(SOLOUD_MA_LIBS_FOUND TRUE)
        set(SOLOUD_MA_INC_DIR_FOUND TRUE)
    else()
        message(WARNING "SoLoud_MA Could Not Be Found With Current Methods, Please Either Install SoLoud_MA Or Clone SoLoud_MA Into The depend Directory!")
    endif()
endif()

if(EXISTS "C:/Program Files (x86)/substd/")
    if(EXISTS "C:/Program Files (x86)/substd/lib/libsubstd.a")
        set(SUBSTD_LIBS_FOUND TRUE)
        list(APPEND SUBSTD_LIBS "C:/Program Files (x86)/substd/lib/libsubstd.a")
    endif()
    if(EXISTS "C:/Program Files (x86)/substd/include")
        set(SUBSTD_INC_DIRS_FOUND TRUE)
        list(APPEND SUBSTD_INC_DIRS "C:/Program Files (x86)/substd/include")
    endif()
endif()
if((NOT SUBSTD_LIBS_FOUND) OR (NOT SUBSTD_INC_DIRS_FOUND))
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/substd)
        add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/substd)
        list(APPEND SUBSTD_INC_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/substd/include)
        set(SUBSTD_LIBS_FOUND TRUE)
        set(SUBSTD_INC_DIR_FOUND TRUE)
    else()
        message(WARNING "substd Could Not Be Found With Current Methods, Please Either Install substd Or Clone susbtd Into The depend Directory!")
    endif()
endif()


if(WIN32)
    list(APPEND GLEWY_PLATFORM_SPECIFIC_DEP_LIBS gdi32 opengl32)
endif()

set(GLEWY_DEP_INC_DIRS ${GLEW_INC_DIRS} ${GLFW_INC_DIRS} ${SOIL_INC_DIRS} ${SOLOUD_MA_INC_DIRS} ${SUBSTD_INC_DIRS} PARENT_SCOPE)
set(GLEWY_DEP_LIBS ${GLEW_LIBS} ${GLFW_LIBS} ${SOIL_LIBS} ${SOLOUD_MA_LIBS} ${SUBSTD_LIBS} ${GLEWY_PLATFORM_SPECIFIC_DEP_LIBS} PARENT_SCOPE)